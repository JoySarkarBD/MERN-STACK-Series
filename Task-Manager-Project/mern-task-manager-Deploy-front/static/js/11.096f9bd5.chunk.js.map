{"version":3,"sources":["components/AccountRecover/Send-OTP.jsx","APIRequest/APIRequest.js","helper/FormHelper.js"],"names":["SendOTP","emailRef","useRef","navigate","useNavigate","className","ref","input","placeholder","type","onClick","email","value","IsEmail","ErrorToast","RecoverVerifyEmailRequest","then","result","BaseURL","AxiosHeader","headers","getToken","NewTaskRequest","title","description","store","dispatch","ShowLoader","PostBody","status","axios","post","res","HideLoader","SuccessToast","catch","err","LoginRequest","password","setToken","data","setUserDetails","RegistrationRequest","firstName","lastName","mobile","photo","TaskListByStatus","Status","URL","get","SetNewTask","SetCompletedTask","SetCanceledTask","SetProgressTask","SummaryRequest","SetSummary","DeleteRequest","id","UpdateStatusRequest","GetProfileDetails","SetProfile","ProfileUpdateRequest","UserDetails","setEmail","RecoverVerifyOTPRequest","OTP","setOTP","RecoverResetPassRequest","EmailRegx","MobileRegx","length","test","msg","cogoToast","error","position","success","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","IsEmpty","IsMobile","getBase64"],"mappings":"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","file":"static/js/11.096f9bd5.chunk.js","sourcesContent":["import React, {Fragment, useRef} from 'react';\r\nimport {ErrorToast, IsEmail} from \"../../helper/FormHelper\";\r\nimport {RecoverVerifyEmailRequest} from \"../../APIRequest/APIRequest\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst SendOTP = () => {\r\n    let emailRef=useRef();\r\n    let navigate=useNavigate();\r\n    const VerifyEmail=()=>{\r\n        let email=emailRef.value;\r\n        if(IsEmail(email)){\r\n            ErrorToast(\"Valid Email Address Required !\")\r\n        }\r\n        else{\r\n            RecoverVerifyEmailRequest(email).then((result)=>{\r\n                if(result===true){\r\n                    navigate(\"/VerifyOTP\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-7 col-lg-6 center-screen\">\r\n                        <div className=\"card w-90  p-4\">\r\n                            <div className=\"card-body\">\r\n                                <h4>EMAIL ADDRESS</h4>\r\n                                <br/>\r\n                                <label>Your email address</label>\r\n                                <input ref={(input)=>emailRef=input}  placeholder=\"User Email\" className=\"form-control animated fadeInUp\" type=\"email\"/>\r\n                                <br/>\r\n                                <button onClick={VerifyEmail}  className=\"btn w-100 animated fadeInUp float-end btn-primary\">Next</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SendOTP;","import axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport {getToken, setEmail, setOTP, setToken, setUserDetails} from \"../helper/SessionHelper\";\r\nimport {SetCanceledTask, SetCompletedTask, SetNewTask, SetProgressTask} from \"../redux/state-slice/task-slice\";\r\nimport {SetSummary} from \"../redux/state-slice/summary-slice\";\r\nimport {SetProfile} from \"../redux/state-slice/profile-slice\";\r\nconst BaseURL=\"https://mern-task-manager-rabbil.herokuapp.com/api/v1\"\r\n\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\nexport function NewTaskRequest(title,description){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/createTask\";\r\n    let PostBody={\"title\":title,\"description\":description,status:\"New\"}\r\n\r\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"New Task Created\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    })\r\n\r\n\r\n}\r\nexport function LoginRequest(email,password){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/login\";\r\n    let PostBody={\"email\":email,\"password\":password}\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            setToken(res.data['token']);\r\n            setUserDetails(res.data['data']);\r\n            SuccessToast(\"Login Success\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Invalid Email or Password\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function RegistrationRequest(email,firstName,lastName,mobile,password,photo){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/registration\";\r\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password, photo:photo}\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                if(res.data['data']['keyPattern']['email']===1){\r\n                    ErrorToast(\"Email Already Exist\")\r\n                    return false;\r\n                }\r\n                else{\r\n                    ErrorToast(\"Something Went Wrong\")\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                SuccessToast(\"Registration Success\")\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n        return false;\r\n    })\r\n}\r\nexport function TaskListByStatus(Status){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/listTaskByStatus/\"+Status;\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(Status===\"New\"){\r\n                store.dispatch(SetNewTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Completed\"){\r\n                store.dispatch(SetCompletedTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Canceled\"){\r\n                store.dispatch(SetCanceledTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Progress\"){\r\n                debugger;\r\n                store.dispatch(SetProgressTask(res.data['data']))\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function SummaryRequest(){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/taskStatusCount\";\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetSummary(res.data['data']))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function DeleteRequest(id){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/deleteTask/\"+id;\r\n    return axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Delete Successful\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function UpdateStatusRequest(id,status){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/updateTaskStatus/\"+id+\"/\"+status;\r\n    return axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Status Updated\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function GetProfileDetails(){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/profileDetails\";\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetProfile(res.data['data'][0]))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function ProfileUpdateRequest(email,firstName,lastName,mobile,password,photo){\r\n\r\n    store.dispatch(ShowLoader())\r\n\r\n    let URL=BaseURL+\"/profileUpdate\";\r\n\r\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password,photo:photo}\r\n    let UserDetails={email:email,firstName:firstName,lastName:lastName,mobile:mobile,photo:photo}\r\n\r\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            SuccessToast(\"Profile Update Success\")\r\n            setUserDetails(UserDetails)\r\n\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n// Recover Password Step 01 Send OTP\r\nexport function RecoverVerifyEmailRequest(email){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverVerifyEmail/\"+email;\r\n    return axios.get(URL).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(\"No user found\");\r\n                return false;\r\n            }\r\n            else{\r\n                setEmail(email)\r\n                SuccessToast(\"A 6 Digit verification code has been sent to your email address. \");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\");\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n// Recover Password Step 02 Verify OTP\r\nexport function RecoverVerifyOTPRequest(email,OTP){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverVerifyOTP/\"+email+\"/\"+OTP;\r\n    return axios.get(URL).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"Code Verification Success\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n// Recover Password Step 03 Reset Pass\r\nexport function RecoverResetPassRequest(email,OTP,password){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverResetPass\";\r\n    let PostBody={email:email,OTP:OTP,password:password}\r\n\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"NEW PASSWORD CREATED\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n","import cogoToast from \"cogo-toast\";\r\nlet EmailRegx = /\\S+@\\S+\\.\\S+/;\r\nlet MobileRegx = /(^(\\+88|0088)?(01){1}[3456789]{1}(\\d){8})$/;\r\n\r\nclass FormHelper {\r\n\r\n    IsEmpty(value) {\r\n        return value.length === 0;\r\n    }\r\n\r\n    IsMobile(value){\r\n        return MobileRegx.test(value);\r\n    }\r\n\r\n    IsEmail(value) {\r\n        return !EmailRegx.test(value);\r\n    }\r\n\r\n    ErrorToast(msg) {\r\n        cogoToast.error(msg, { position: \"bottom-center\" });\r\n    }\r\n    SuccessToast(msg) {\r\n        cogoToast.success(msg, { position: \"bottom-center\" });\r\n    }\r\n\r\n\r\n    getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const {\r\n    IsEmpty,\r\n    IsMobile,\r\n    IsEmail,\r\n    ErrorToast,\r\n    getBase64,\r\n    SuccessToast\r\n} = new FormHelper();"],"sourceRoot":""}