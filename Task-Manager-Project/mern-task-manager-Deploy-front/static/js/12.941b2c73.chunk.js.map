{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","components/Create/Create.jsx","APIRequest/APIRequest.js","helper/FormHelper.js"],"names":["Row","React","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","Create","titleRef","descriptionRef","useRef","navigate","useNavigate","Container","fluid","input","placeholder","type","rows","onClick","title","value","description","IsEmpty","ErrorToast","NewTaskRequest","then","res","BaseURL","AxiosHeader","headers","getToken","store","dispatch","ShowLoader","PostBody","status","axios","post","HideLoader","SuccessToast","catch","err","LoginRequest","email","password","setToken","data","setUserDetails","RegistrationRequest","firstName","lastName","mobile","photo","TaskListByStatus","Status","URL","get","SetNewTask","SetCompletedTask","SetCanceledTask","SetProgressTask","SummaryRequest","SetSummary","DeleteRequest","id","UpdateStatusRequest","GetProfileDetails","SetProfile","ProfileUpdateRequest","UserDetails","RecoverVerifyEmailRequest","setEmail","RecoverVerifyOTPRequest","OTP","setOTP","RecoverResetPassRequest","EmailRegx","MobileRegx","length","test","msg","cogoToast","error","position","success","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","IsMobile","IsEmail","getBase64"],"mappings":"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","file":"static/js/12.941b2c73.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React, {useRef} from 'react';\r\nimport {Container, Row} from \"react-bootstrap\";\r\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {NewTaskRequest} from \"../../APIRequest/APIRequest\";\r\nconst Create = () => {\r\n    let titleRef,descriptionRef=useRef();\r\n    let navigate = useNavigate ();\r\n\r\n    const CreateNew = () => {\r\n        let title=titleRef.value;\r\n        let description=descriptionRef.value;\r\n        if(IsEmpty(title)){\r\n            ErrorToast(\"Title Required\")\r\n        }\r\n        else if(IsEmpty(description)){\r\n            ErrorToast(\"Description Required\")\r\n        }\r\n        else {\r\n            NewTaskRequest(title,description).then((res)=>{\r\n                if(res===true){\r\n                    navigate(\"/All\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container fluid={true} className=\"content-body\">\r\n            <Row className=\"d-flex justify-content-center\">\r\n                <div className=\"col-12 col-lg-8  col-sm-12 col-md-8  p-2\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 >Create New</h4>\r\n                            <br/>\r\n                            <input ref={(input)=>titleRef=input} placeholder=\"Task Name\" className=\"form-control animated fadeInUp\" type=\"text\"/>\r\n                            <br/>\r\n                            <textarea ref={(input)=>descriptionRef=input} rows={5} placeholder=\"Task Description\" className=\"form-control animated fadeInUp\" type=\"text\"/>\r\n                            <br/>\r\n                            <button onClick={CreateNew} className=\"btn float-end btn-primary\">Create</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\nexport default Create;","import axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport {getToken, setEmail, setOTP, setToken, setUserDetails} from \"../helper/SessionHelper\";\r\nimport {SetCanceledTask, SetCompletedTask, SetNewTask, SetProgressTask} from \"../redux/state-slice/task-slice\";\r\nimport {SetSummary} from \"../redux/state-slice/summary-slice\";\r\nimport {SetProfile} from \"../redux/state-slice/profile-slice\";\r\nconst BaseURL=\"https://mern-task-manager-rabbil.herokuapp.com/api/v1\"\r\n\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\nexport function NewTaskRequest(title,description){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/createTask\";\r\n    let PostBody={\"title\":title,\"description\":description,status:\"New\"}\r\n\r\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"New Task Created\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    })\r\n\r\n\r\n}\r\nexport function LoginRequest(email,password){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/login\";\r\n    let PostBody={\"email\":email,\"password\":password}\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            setToken(res.data['token']);\r\n            setUserDetails(res.data['data']);\r\n            SuccessToast(\"Login Success\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Invalid Email or Password\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function RegistrationRequest(email,firstName,lastName,mobile,password,photo){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/registration\";\r\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password, photo:photo}\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                if(res.data['data']['keyPattern']['email']===1){\r\n                    ErrorToast(\"Email Already Exist\")\r\n                    return false;\r\n                }\r\n                else{\r\n                    ErrorToast(\"Something Went Wrong\")\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                SuccessToast(\"Registration Success\")\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n        return false;\r\n    })\r\n}\r\nexport function TaskListByStatus(Status){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/listTaskByStatus/\"+Status;\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(Status===\"New\"){\r\n                store.dispatch(SetNewTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Completed\"){\r\n                store.dispatch(SetCompletedTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Canceled\"){\r\n                store.dispatch(SetCanceledTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Progress\"){\r\n                debugger;\r\n                store.dispatch(SetProgressTask(res.data['data']))\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function SummaryRequest(){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/taskStatusCount\";\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetSummary(res.data['data']))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function DeleteRequest(id){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/deleteTask/\"+id;\r\n    return axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Delete Successful\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function UpdateStatusRequest(id,status){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/updateTaskStatus/\"+id+\"/\"+status;\r\n    return axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Status Updated\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function GetProfileDetails(){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/profileDetails\";\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetProfile(res.data['data'][0]))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function ProfileUpdateRequest(email,firstName,lastName,mobile,password,photo){\r\n\r\n    store.dispatch(ShowLoader())\r\n\r\n    let URL=BaseURL+\"/profileUpdate\";\r\n\r\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password,photo:photo}\r\n    let UserDetails={email:email,firstName:firstName,lastName:lastName,mobile:mobile,photo:photo}\r\n\r\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            SuccessToast(\"Profile Update Success\")\r\n            setUserDetails(UserDetails)\r\n\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n// Recover Password Step 01 Send OTP\r\nexport function RecoverVerifyEmailRequest(email){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverVerifyEmail/\"+email;\r\n    return axios.get(URL).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(\"No user found\");\r\n                return false;\r\n            }\r\n            else{\r\n                setEmail(email)\r\n                SuccessToast(\"A 6 Digit verification code has been sent to your email address. \");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\");\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n// Recover Password Step 02 Verify OTP\r\nexport function RecoverVerifyOTPRequest(email,OTP){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverVerifyOTP/\"+email+\"/\"+OTP;\r\n    return axios.get(URL).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"Code Verification Success\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n// Recover Password Step 03 Reset Pass\r\nexport function RecoverResetPassRequest(email,OTP,password){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverResetPass\";\r\n    let PostBody={email:email,OTP:OTP,password:password}\r\n\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"NEW PASSWORD CREATED\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n","import cogoToast from \"cogo-toast\";\r\nlet EmailRegx = /\\S+@\\S+\\.\\S+/;\r\nlet MobileRegx = /(^(\\+88|0088)?(01){1}[3456789]{1}(\\d){8})$/;\r\n\r\nclass FormHelper {\r\n\r\n    IsEmpty(value) {\r\n        return value.length === 0;\r\n    }\r\n\r\n    IsMobile(value){\r\n        return MobileRegx.test(value);\r\n    }\r\n\r\n    IsEmail(value) {\r\n        return !EmailRegx.test(value);\r\n    }\r\n\r\n    ErrorToast(msg) {\r\n        cogoToast.error(msg, { position: \"bottom-center\" });\r\n    }\r\n    SuccessToast(msg) {\r\n        cogoToast.success(msg, { position: \"bottom-center\" });\r\n    }\r\n\r\n\r\n    getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const {\r\n    IsEmpty,\r\n    IsMobile,\r\n    IsEmail,\r\n    ErrorToast,\r\n    getBase64,\r\n    SuccessToast\r\n} = new FormHelper();"],"sourceRoot":""}