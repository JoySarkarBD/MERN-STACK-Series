{"version":3,"sources":["components/AccountRecover/Create-Password.jsx","APIRequest/APIRequest.js","helper/FormHelper.js"],"names":["CreatePassword","PasswordRef","ConfirmPasswordRef","useRef","navigate","useNavigate","className","readOnly","value","getEmail","placeholder","type","ref","input","onClick","Password","ConfirmPassword","IsEmpty","ErrorToast","RecoverResetPassRequest","getOTP","then","result","BaseURL","AxiosHeader","headers","getToken","NewTaskRequest","title","description","store","dispatch","ShowLoader","PostBody","status","axios","post","res","HideLoader","SuccessToast","catch","err","LoginRequest","email","password","setToken","data","setUserDetails","RegistrationRequest","firstName","lastName","mobile","photo","TaskListByStatus","Status","URL","get","SetNewTask","SetCompletedTask","SetCanceledTask","SetProgressTask","SummaryRequest","SetSummary","DeleteRequest","id","UpdateStatusRequest","GetProfileDetails","SetProfile","ProfileUpdateRequest","UserDetails","RecoverVerifyEmailRequest","setEmail","RecoverVerifyOTPRequest","OTP","setOTP","EmailRegx","MobileRegx","length","test","msg","cogoToast","error","position","success","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","IsMobile","IsEmail","getBase64"],"mappings":"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","file":"static/js/10.de9dab74.chunk.js","sourcesContent":["import React, {Fragment, useRef} from 'react';\r\nimport {ErrorToast, IsEmpty} from \"../../helper/FormHelper\";\r\nimport {RecoverResetPassRequest} from \"../../APIRequest/APIRequest\";\r\nimport {getEmail, getOTP} from \"../../helper/SessionHelper\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nconst CreatePassword = () => {\r\n\r\n    let PasswordRef,ConfirmPasswordRef=useRef();\r\n    let navigate=useNavigate();\r\n\r\n    const ResetPass = () => {\r\n        let Password = PasswordRef.value;\r\n        let ConfirmPassword =  ConfirmPasswordRef.value;\r\n        if(IsEmpty(Password)){\r\n            ErrorToast(\"Password Required\")\r\n        }\r\n        else if(IsEmpty(ConfirmPassword)){\r\n            ErrorToast(\"Confirm Password Required\")\r\n        }\r\n        else if(Password!==ConfirmPassword){\r\n            ErrorToast(\"Password & Confirm Password Should be Same\")\r\n        }\r\n        else{\r\n            RecoverResetPassRequest(getEmail(),getOTP(),Password).then((result)=>{\r\n                if(result===true){\r\n                    navigate(\"/Login\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-7 col-lg-6 center-screen\">\r\n                        <div className=\"card w-90 p-4\">\r\n                            <div className=\"card-body\">\r\n                                <h4>SET NEW PASSWORD</h4>\r\n                                <br/>\r\n                                <label>Your email address</label>\r\n                                <input readOnly={true} value={getEmail()} placeholder=\"User Email\" className=\"form-control animated fadeInUp\" type=\"email\"/>\r\n                                <br/>\r\n                                <label>New Password</label>\r\n                                <input  ref={(input)=>PasswordRef=input} placeholder=\"New Password\" className=\"form-control animated fadeInUp\" type=\"password\"/>\r\n                                <br/>\r\n                                <label>Confirm Password</label>\r\n                                <input  ref={(input)=>ConfirmPasswordRef=input} placeholder=\"Confirm Password\" className=\"form-control animated fadeInUp\" type=\"password\"/>\r\n                                <br/>\r\n                                <button onClick={ResetPass} className=\"btn w-100 animated fadeInUp float-end btn-primary\">Next</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default CreatePassword;","import axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport {getToken, setEmail, setOTP, setToken, setUserDetails} from \"../helper/SessionHelper\";\r\nimport {SetCanceledTask, SetCompletedTask, SetNewTask, SetProgressTask} from \"../redux/state-slice/task-slice\";\r\nimport {SetSummary} from \"../redux/state-slice/summary-slice\";\r\nimport {SetProfile} from \"../redux/state-slice/profile-slice\";\r\nconst BaseURL=\"https://mern-task-manager-rabbil.herokuapp.com/api/v1\"\r\n\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\nexport function NewTaskRequest(title,description){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/createTask\";\r\n    let PostBody={\"title\":title,\"description\":description,status:\"New\"}\r\n\r\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"New Task Created\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    })\r\n\r\n\r\n}\r\nexport function LoginRequest(email,password){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/login\";\r\n    let PostBody={\"email\":email,\"password\":password}\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            setToken(res.data['token']);\r\n            setUserDetails(res.data['data']);\r\n            SuccessToast(\"Login Success\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Invalid Email or Password\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function RegistrationRequest(email,firstName,lastName,mobile,password,photo){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/registration\";\r\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password, photo:photo}\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                if(res.data['data']['keyPattern']['email']===1){\r\n                    ErrorToast(\"Email Already Exist\")\r\n                    return false;\r\n                }\r\n                else{\r\n                    ErrorToast(\"Something Went Wrong\")\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                SuccessToast(\"Registration Success\")\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n        return false;\r\n    })\r\n}\r\nexport function TaskListByStatus(Status){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/listTaskByStatus/\"+Status;\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(Status===\"New\"){\r\n                store.dispatch(SetNewTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Completed\"){\r\n                store.dispatch(SetCompletedTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Canceled\"){\r\n                store.dispatch(SetCanceledTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Progress\"){\r\n                debugger;\r\n                store.dispatch(SetProgressTask(res.data['data']))\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function SummaryRequest(){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/taskStatusCount\";\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetSummary(res.data['data']))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function DeleteRequest(id){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/deleteTask/\"+id;\r\n    return axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Delete Successful\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function UpdateStatusRequest(id,status){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/updateTaskStatus/\"+id+\"/\"+status;\r\n    return axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Status Updated\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function GetProfileDetails(){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/profileDetails\";\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetProfile(res.data['data'][0]))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function ProfileUpdateRequest(email,firstName,lastName,mobile,password,photo){\r\n\r\n    store.dispatch(ShowLoader())\r\n\r\n    let URL=BaseURL+\"/profileUpdate\";\r\n\r\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password,photo:photo}\r\n    let UserDetails={email:email,firstName:firstName,lastName:lastName,mobile:mobile,photo:photo}\r\n\r\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            SuccessToast(\"Profile Update Success\")\r\n            setUserDetails(UserDetails)\r\n\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n// Recover Password Step 01 Send OTP\r\nexport function RecoverVerifyEmailRequest(email){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverVerifyEmail/\"+email;\r\n    return axios.get(URL).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(\"No user found\");\r\n                return false;\r\n            }\r\n            else{\r\n                setEmail(email)\r\n                SuccessToast(\"A 6 Digit verification code has been sent to your email address. \");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\");\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n// Recover Password Step 02 Verify OTP\r\nexport function RecoverVerifyOTPRequest(email,OTP){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverVerifyOTP/\"+email+\"/\"+OTP;\r\n    return axios.get(URL).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"Code Verification Success\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n// Recover Password Step 03 Reset Pass\r\nexport function RecoverResetPassRequest(email,OTP,password){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverResetPass\";\r\n    let PostBody={email:email,OTP:OTP,password:password}\r\n\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"NEW PASSWORD CREATED\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n","import cogoToast from \"cogo-toast\";\r\nlet EmailRegx = /\\S+@\\S+\\.\\S+/;\r\nlet MobileRegx = /(^(\\+88|0088)?(01){1}[3456789]{1}(\\d){8})$/;\r\n\r\nclass FormHelper {\r\n\r\n    IsEmpty(value) {\r\n        return value.length === 0;\r\n    }\r\n\r\n    IsMobile(value){\r\n        return MobileRegx.test(value);\r\n    }\r\n\r\n    IsEmail(value) {\r\n        return !EmailRegx.test(value);\r\n    }\r\n\r\n    ErrorToast(msg) {\r\n        cogoToast.error(msg, { position: \"bottom-center\" });\r\n    }\r\n    SuccessToast(msg) {\r\n        cogoToast.success(msg, { position: \"bottom-center\" });\r\n    }\r\n\r\n\r\n    getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const {\r\n    IsEmpty,\r\n    IsMobile,\r\n    IsEmail,\r\n    ErrorToast,\r\n    getBase64,\r\n    SuccessToast\r\n} = new FormHelper();"],"sourceRoot":""}