{"version":3,"sources":["components/Dashboard/Dashboard.jsx","APIRequest/APIRequest.js","helper/FormHelper.js"],"names":["Dashboard","useEffect","SummaryRequest","SummaryList","useSelector","state","summary","value","className","map","item","i","_id","sum","BaseURL","AxiosHeader","headers","getToken","NewTaskRequest","title","description","store","dispatch","ShowLoader","PostBody","status","axios","post","then","res","HideLoader","SuccessToast","ErrorToast","catch","err","LoginRequest","email","password","setToken","data","setUserDetails","RegistrationRequest","firstName","lastName","mobile","photo","TaskListByStatus","Status","URL","get","SetNewTask","SetCompletedTask","SetCanceledTask","SetProgressTask","SetSummary","DeleteRequest","id","UpdateStatusRequest","GetProfileDetails","SetProfile","ProfileUpdateRequest","UserDetails","RecoverVerifyEmailRequest","setEmail","RecoverVerifyOTPRequest","OTP","setOTP","RecoverResetPassRequest","EmailRegx","MobileRegx","length","test","msg","cogoToast","error","position","success","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","IsEmpty","IsMobile","IsEmail","getBase64"],"mappings":"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","file":"static/js/13.e2e56f0c.chunk.js","sourcesContent":["import React, {Fragment, useEffect} from 'react';\r\nimport {SummaryRequest} from \"../../APIRequest/APIRequest\";\r\nimport {useSelector} from \"react-redux\";\r\nconst Dashboard = () => {\r\n\r\n    useEffect(()=>{\r\n        SummaryRequest();\r\n    },[])\r\n\r\n    const SummaryList = useSelector((state) => state.summary.value)\r\n\r\n    return (\r\n        <Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            SummaryList.map((item,i)=>\r\n                                <div  className=\"col-12 col-lg-3 col-sm-6 col-md-3  p-2\">\r\n                                    <div className=\"card h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"animated fadeInUp\">Total {item._id}</h5>\r\n                                            <h6 className=\"text-secondary animated fadeInUp\">{item.sum}</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport {getToken, setEmail, setOTP, setToken, setUserDetails} from \"../helper/SessionHelper\";\r\nimport {SetCanceledTask, SetCompletedTask, SetNewTask, SetProgressTask} from \"../redux/state-slice/task-slice\";\r\nimport {SetSummary} from \"../redux/state-slice/summary-slice\";\r\nimport {SetProfile} from \"../redux/state-slice/profile-slice\";\r\nconst BaseURL=\"https://mern-task-manager-rabbil.herokuapp.com/api/v1\"\r\n\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\nexport function NewTaskRequest(title,description){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/createTask\";\r\n    let PostBody={\"title\":title,\"description\":description,status:\"New\"}\r\n\r\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"New Task Created\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    })\r\n\r\n\r\n}\r\nexport function LoginRequest(email,password){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/login\";\r\n    let PostBody={\"email\":email,\"password\":password}\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            setToken(res.data['token']);\r\n            setUserDetails(res.data['data']);\r\n            SuccessToast(\"Login Success\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Invalid Email or Password\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function RegistrationRequest(email,firstName,lastName,mobile,password,photo){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/registration\";\r\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password, photo:photo}\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                if(res.data['data']['keyPattern']['email']===1){\r\n                    ErrorToast(\"Email Already Exist\")\r\n                    return false;\r\n                }\r\n                else{\r\n                    ErrorToast(\"Something Went Wrong\")\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                SuccessToast(\"Registration Success\")\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n        return false;\r\n    })\r\n}\r\nexport function TaskListByStatus(Status){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/listTaskByStatus/\"+Status;\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(Status===\"New\"){\r\n                store.dispatch(SetNewTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Completed\"){\r\n                store.dispatch(SetCompletedTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Canceled\"){\r\n                store.dispatch(SetCanceledTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Progress\"){\r\n                debugger;\r\n                store.dispatch(SetProgressTask(res.data['data']))\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function SummaryRequest(){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/taskStatusCount\";\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetSummary(res.data['data']))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function DeleteRequest(id){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/deleteTask/\"+id;\r\n    return axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Delete Successful\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function UpdateStatusRequest(id,status){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/updateTaskStatus/\"+id+\"/\"+status;\r\n    return axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Status Updated\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function GetProfileDetails(){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/profileDetails\";\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetProfile(res.data['data'][0]))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function ProfileUpdateRequest(email,firstName,lastName,mobile,password,photo){\r\n\r\n    store.dispatch(ShowLoader())\r\n\r\n    let URL=BaseURL+\"/profileUpdate\";\r\n\r\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password,photo:photo}\r\n    let UserDetails={email:email,firstName:firstName,lastName:lastName,mobile:mobile,photo:photo}\r\n\r\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            SuccessToast(\"Profile Update Success\")\r\n            setUserDetails(UserDetails)\r\n\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n// Recover Password Step 01 Send OTP\r\nexport function RecoverVerifyEmailRequest(email){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverVerifyEmail/\"+email;\r\n    return axios.get(URL).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(\"No user found\");\r\n                return false;\r\n            }\r\n            else{\r\n                setEmail(email)\r\n                SuccessToast(\"A 6 Digit verification code has been sent to your email address. \");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\");\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n// Recover Password Step 02 Verify OTP\r\nexport function RecoverVerifyOTPRequest(email,OTP){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverVerifyOTP/\"+email+\"/\"+OTP;\r\n    return axios.get(URL).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"Code Verification Success\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n// Recover Password Step 03 Reset Pass\r\nexport function RecoverResetPassRequest(email,OTP,password){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverResetPass\";\r\n    let PostBody={email:email,OTP:OTP,password:password}\r\n\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"NEW PASSWORD CREATED\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n","import cogoToast from \"cogo-toast\";\r\nlet EmailRegx = /\\S+@\\S+\\.\\S+/;\r\nlet MobileRegx = /(^(\\+88|0088)?(01){1}[3456789]{1}(\\d){8})$/;\r\n\r\nclass FormHelper {\r\n\r\n    IsEmpty(value) {\r\n        return value.length === 0;\r\n    }\r\n\r\n    IsMobile(value){\r\n        return MobileRegx.test(value);\r\n    }\r\n\r\n    IsEmail(value) {\r\n        return !EmailRegx.test(value);\r\n    }\r\n\r\n    ErrorToast(msg) {\r\n        cogoToast.error(msg, { position: \"bottom-center\" });\r\n    }\r\n    SuccessToast(msg) {\r\n        cogoToast.success(msg, { position: \"bottom-center\" });\r\n    }\r\n\r\n\r\n    getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const {\r\n    IsEmpty,\r\n    IsMobile,\r\n    IsEmail,\r\n    ErrorToast,\r\n    getBase64,\r\n    SuccessToast\r\n} = new FormHelper();"],"sourceRoot":""}