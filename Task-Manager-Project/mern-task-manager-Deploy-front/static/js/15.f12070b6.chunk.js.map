{"version":3,"sources":["components/Profile/Profile.jsx","APIRequest/APIRequest.js","helper/FormHelper.js"],"names":["Profile","emailRef","firstNameRef","lastNameRef","mobileRef","passwordRef","userImgRef","userImgView","useRef","useEffect","GetProfileDetails","ProfileData","useSelector","state","profile","value","navigate","useNavigate","className","ref","input","src","alt","onChange","ImgFile","files","getBase64","then","base64Img","placeholder","type","defaultValue","readOnly","Date","now","onClick","email","fastName","lastName","mobile","password","photo","IsEmail","ErrorToast","IsEmpty","IsMobile","ProfileUpdateRequest","result","BaseURL","AxiosHeader","headers","getToken","NewTaskRequest","title","description","store","dispatch","ShowLoader","PostBody","status","axios","post","res","HideLoader","SuccessToast","catch","err","LoginRequest","setToken","data","setUserDetails","RegistrationRequest","firstName","TaskListByStatus","Status","URL","get","SetNewTask","SetCompletedTask","SetCanceledTask","SetProgressTask","SummaryRequest","SetSummary","DeleteRequest","id","UpdateStatusRequest","SetProfile","UserDetails","RecoverVerifyEmailRequest","setEmail","RecoverVerifyOTPRequest","OTP","setOTP","RecoverResetPassRequest","EmailRegx","MobileRegx","length","test","msg","cogoToast","error","position","success","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror"],"mappings":"yJAAA,wDA6GeA,UAvGC,WACZ,IAAIC,EAASC,EAAaC,EAAYC,EAAUC,EAAYC,EAAWC,EAAYC,mBAEnFC,qBAAU,WACNC,aACH,GAAC,IAGF,IAAMC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQC,KAAzB,IAG5BC,EAASC,cA6Cb,OACI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,oCAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAMC,IAAK,SAACC,GAAD,OAASb,EAAYa,CAArB,EAA4BF,UAAU,kBAAkBG,IAAKV,EAAW,MAAWW,IAAI,KAClG,uBACA,sBAAKJ,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,oDACA,uBAAOK,SAtDtB,WACjB,IAAIC,EAAUlB,EAAWmB,MAAM,GAC/BC,YAAUF,GAASG,MAAK,SAACC,GACrBrB,EAAYc,IAAIO,CACnB,GACJ,EAiDmET,IAAK,SAACC,GAAD,OAASd,EAAWc,CAApB,EAA2BS,YAAY,aAAaX,UAAU,iCAAiCY,KAAK,YAE7I,sBAAKZ,UAAU,YAAf,UACI,kDACA,uBAAwBa,aAAcpB,EAAW,MAAYqB,UAAU,EAAOb,IAAK,SAACC,GAAD,OAASnB,EAASmB,CAAlB,EAAyBS,YAAY,aAAaX,UAAU,iCAAiCY,KAAK,SAAzKG,KAAKC,UAErB,sBAAKhB,UAAU,YAAf,UACI,+CACA,uBAAyBa,aAAcpB,EAAW,UAAeQ,IAAK,SAACC,GAAD,OAASlB,EAAakB,CAAtB,EAA6BS,YAAY,aAAaX,UAAU,iCAAiCY,KAAK,QAA/JG,KAAKC,UAEtB,sBAAKhB,UAAU,YAAf,UACI,8CACA,uBAAwBa,aAAcpB,EAAW,SAAeQ,IAAK,SAACC,GAAD,OAASjB,EAAYiB,CAArB,EAA4BS,YAAY,YAAYX,UAAU,iCAAiCY,KAAK,QAA7JG,KAAKC,UAErB,sBAAKhB,UAAU,YAAf,UACI,2CACA,uBAAwBa,aAAcpB,EAAW,OAAYQ,IAAK,SAACC,GAAD,OAAShB,EAAUgB,CAAnB,EAA0BS,YAAY,SAASX,UAAU,iCAAiCY,KAAK,UAArJG,KAAKC,UAErB,sBAAKhB,UAAU,YAAf,UACI,6CACA,uBAAwBa,aAAcpB,EAAW,SAAeQ,IAAK,SAACC,GAAD,OAASf,EAAYe,CAArB,EAA4BS,YAAY,gBAAgBX,UAAU,iCAAiCY,KAAK,YAAjKG,KAAKC,UAErB,qBAAKhB,UAAU,YAAf,SACI,wBAAQiB,QApEpB,WACpB,IAAIC,EAAMnC,EAASc,MACfsB,EAASnC,EAAaa,MACtBuB,EAASnC,EAAYY,MACrBwB,EAAOnC,EAAUW,MACjByB,EAAUnC,EAAYU,MACtB0B,EAAMlC,EAAYc,IAEnBqB,YAAQN,GACPO,YAAW,kCAEPC,YAAQP,GACZM,YAAW,yBAEPC,YAAQN,GACZK,YAAW,wBAENE,YAASN,GAGVK,YAAQJ,GACZG,YAAW,uBAGXG,YAAqBV,EAAMC,EAASC,EAASC,EAAOC,EAASC,GAAOd,MAAK,SAACoB,IAC1D,IAATA,GACC/B,EAAS,IAEhB,IAVD2B,YAAW,2BAYlB,EAsCsEzB,UAAU,oDAA7C,qCAUvC,C,kCC3GD,qeAQM8B,EAAQ,wDAERC,EAAY,CAACC,QAAQ,CAAC,MAAQC,gBAC7B,SAASC,EAAeC,EAAMC,GACjCC,IAAMC,SAASC,eACf,IACIC,EAAS,CAAC,MAAQL,EAAM,YAAcC,EAAYK,OAAO,OAE7D,OAAOC,IAAMC,KAHLb,mEAGcU,EAAST,GAAatB,MAAK,SAACmC,GAE9C,OADAP,IAAMC,SAASO,eACC,MAAbD,EAAIH,QACHK,YAAa,qBACN,IAGPrB,YAAW,yBACJ,EAGd,IAAEsB,OAAM,SAACC,GAGN,OAFAvB,YAAW,wBACXY,IAAMC,SAASO,gBACR,CACV,GAGJ,CACM,SAASI,EAAa/B,EAAMI,GAC/Be,IAAMC,SAASC,eACf,IACIC,EAAS,CAAC,MAAQtB,EAAM,SAAWI,GACvC,OAAOoB,IAAMC,KAFLb,8DAEcU,GAAU/B,MAAK,SAACmC,GAElC,OADAP,IAAMC,SAASO,eACC,MAAbD,EAAIH,QACHS,YAASN,EAAIO,KAAJ,OACTC,YAAeR,EAAIO,KAAJ,MACfL,YAAa,kBACN,IAGPrB,YAAW,8BACH,EAEf,IAAEsB,OAAM,SAACC,GAGN,OAFAvB,YAAW,wBACXY,IAAMC,SAASO,gBACR,CACV,GACJ,CACM,SAASQ,EAAoBnC,EAAMoC,EAAUlC,EAASC,EAAOC,EAASC,GACzEc,IAAMC,SAASC,eACf,IACIC,EAAS,CAACtB,MAAMA,EAAMoC,UAAUA,EAAUlC,SAASA,EAASC,OAAOA,EAAOC,SAASA,EAAUC,MAAMA,GACvG,OAAOmB,IAAMC,KAFLb,qEAEcU,GAAU/B,MAAK,SAACmC,GAElC,OADAP,IAAMC,SAASO,eACC,MAAbD,EAAIH,OACqB,SAArBG,EAAIO,KAAJ,OAC8C,IAA1CP,EAAIO,KAAJ,uBACC1B,YAAW,wBACJ,IAGPA,YAAW,yBACJ,IAIXqB,YAAa,yBACN,IAIXrB,YAAW,yBACH,EAEf,IAAEsB,OAAM,SAACC,GAGN,OAFAX,IAAMC,SAASO,eACfpB,YAAW,yBACJ,CACV,GACJ,CACM,SAAS8B,EAAiBC,GAC7BnB,IAAMC,SAASC,eACf,IAAIkB,EAAI3B,EAAQ,qBAAqB0B,EACrCd,IAAMgB,IAAID,EAAI1B,GAAatB,MAAK,SAACmC,GAC7BP,IAAMC,SAASO,eACC,MAAbD,EAAIH,OACS,QAATe,EACCnB,IAAMC,SAASqB,YAAWf,EAAIO,KAAJ,OAEb,cAATK,EACJnB,IAAMC,SAASsB,YAAiBhB,EAAIO,KAAJ,OAEnB,aAATK,EACJnB,IAAMC,SAASuB,YAAgBjB,EAAIO,KAAJ,OAElB,aAATK,GAEJnB,IAAMC,SAASwB,YAAgBlB,EAAIO,KAAJ,OAInC1B,YAAW,uBAElB,IAAEsB,OAAM,SAACC,GACNvB,YAAW,wBACXY,IAAMC,SAASO,cAClB,GACJ,CACM,SAASkB,IACZ1B,IAAMC,SAASC,eAEfG,IAAMgB,IADE5B,wEACMC,GAAatB,MAAK,SAACmC,GAC7BP,IAAMC,SAASO,eACC,MAAbD,EAAIH,OACHJ,IAAMC,SAAS0B,YAAWpB,EAAIO,KAAJ,OAG1B1B,YAAW,uBAElB,IAAEsB,OAAM,SAACC,GACNvB,YAAW,wBACXY,IAAMC,SAASO,cAClB,GACJ,CACM,SAASoB,EAAcC,GAC1B7B,IAAMC,SAASC,eACf,IAAIkB,EAAI3B,EAAQ,eAAeoC,EAC/B,OAAOxB,IAAMgB,IAAID,EAAI1B,GAAatB,MAAK,SAACmC,GAEpC,OADAP,IAAMC,SAASO,eACC,MAAbD,EAAIH,QACHK,YAAa,sBACN,IAGPrB,YAAW,yBACJ,EAEd,IAAEsB,OAAM,SAACC,GAGN,OAFAvB,YAAW,wBACXY,IAAMC,SAASO,gBACR,CACV,GACJ,CACM,SAASsB,EAAoBD,EAAGzB,GACnCJ,IAAMC,SAASC,eACf,IAAIkB,EAAI3B,EAAQ,qBAAqBoC,EAAG,IAAIzB,EAC5C,OAAOC,IAAMgB,IAAID,EAAI1B,GAAatB,MAAK,SAACmC,GAEpC,OADAP,IAAMC,SAASO,eACC,MAAbD,EAAIH,QACHK,YAAa,mBACN,IAGPrB,YAAW,yBACJ,EAEd,IAAEsB,OAAM,SAACC,GAGN,OAFAvB,YAAW,wBACXY,IAAMC,SAASO,gBACR,CACV,GACJ,CACM,SAASrD,IACZ6C,IAAMC,SAASC,eAEfG,IAAMgB,IADE5B,uEACMC,GAAatB,MAAK,SAACmC,GAC7BP,IAAMC,SAASO,eACC,MAAbD,EAAIH,OACHJ,IAAMC,SAAS8B,YAAWxB,EAAIO,KAAJ,KAAiB,KAG3C1B,YAAW,uBAElB,IAAEsB,OAAM,SAACC,GACNvB,YAAW,wBACXY,IAAMC,SAASO,cAClB,GACJ,CACM,SAASjB,EAAqBV,EAAMoC,EAAUlC,EAASC,EAAOC,EAASC,GAE1Ec,IAAMC,SAASC,eAEf,IAEIC,EAAS,CAACtB,MAAMA,EAAMoC,UAAUA,EAAUlC,SAASA,EAASC,OAAOA,EAAOC,SAASA,EAASC,MAAMA,GAClG8C,EAAY,CAACnD,MAAMA,EAAMoC,UAAUA,EAAUlC,SAASA,EAASC,OAAOA,EAAOE,MAAMA,GAEvF,OAAOmB,IAAMC,KALLb,sEAKcU,EAAST,GAAatB,MAAK,SAACmC,GAE9C,OADAP,IAAMC,SAASO,eACC,MAAbD,EAAIH,QAEHK,YAAa,0BACbM,YAAeiB,IAER,IAGP5C,YAAW,yBACH,EAEf,IAAEsB,OAAM,SAACC,GAGN,OAFAvB,YAAW,wBACXY,IAAMC,SAASO,gBACR,CACV,GACJ,CAMM,SAASyB,EAA0BpD,GACtCmB,IAAMC,SAASC,eACf,IAAIkB,EAAI3B,EAAQ,uBAAuBZ,EACvC,OAAOwB,IAAMgB,IAAID,GAAKhD,MAAK,SAACmC,GAExB,OADAP,IAAMC,SAASO,eACC,MAAbD,EAAIH,OAEqB,SAArBG,EAAIO,KAAJ,QACC1B,YAAW,kBACJ,IAGP8C,YAASrD,GACT4B,YAAa,sEACN,IAIXrB,YAAW,yBACJ,EAEd,IAAEsB,OAAM,SAACC,GAGN,OAFAvB,YAAW,wBACXY,IAAMC,SAASO,gBACR,CACV,GACJ,CAGM,SAAS2B,EAAwBtD,EAAMuD,GAC1CpC,IAAMC,SAASC,eACf,IAAIkB,EAAI3B,EAAQ,qBAAqBZ,EAAM,IAAIuD,EAC/C,OAAO/B,IAAMgB,IAAID,GAAKhD,MAAK,SAACmC,GAExB,OADAP,IAAMC,SAASO,eACC,MAAbD,EAAIH,OACqB,SAArBG,EAAIO,KAAJ,QACC1B,YAAWmB,EAAIO,KAAJ,OACJ,IAGPuB,YAAOD,GACP3B,YAAa,8BACN,IAIXrB,YAAW,yBACJ,EAEd,IAAEsB,OAAM,SAACC,GAGN,OAFAvB,YAAW,wBACXY,IAAMC,SAASO,gBACR,CACV,GACJ,CAGM,SAAS8B,EAAwBzD,EAAMuD,EAAInD,GAC9Ce,IAAMC,SAASC,eACf,IACIC,EAAS,CAACtB,MAAMA,EAAMuD,IAAIA,EAAInD,SAASA,GAE3C,OAAOoB,IAAMC,KAHLb,yEAGcU,GAAU/B,MAAK,SAACmC,GAElC,OADAP,IAAMC,SAASO,eACC,MAAbD,EAAIH,OAEqB,SAArBG,EAAIO,KAAJ,QACC1B,YAAWmB,EAAIO,KAAJ,OACJ,IAGPuB,YAAOD,GACP3B,YAAa,yBACN,IAIXrB,YAAW,yBACJ,EAEd,IAAEsB,OAAM,SAACC,GAGN,OAFAvB,YAAW,wBACXY,IAAMC,SAASO,gBACR,CACV,GACJ,C,0QChTG+B,EAAY,eACZC,EAAa,6CAoCV,EAOH,I,uFAvCA,SAAQhF,GACJ,OAAwB,IAAjBA,EAAMiF,MAChB,G,sBAED,SAASjF,GACL,OAAOgF,EAAWE,KAAKlF,EAC1B,G,qBAED,SAAQA,GACJ,OAAQ+E,EAAUG,KAAKlF,EAC1B,G,wBAED,SAAWmF,GACPC,IAAUC,MAAMF,EAAK,CAAEG,SAAU,iBACpC,G,0BACD,SAAaH,GACTC,IAAUG,QAAQJ,EAAK,CAAEG,SAAU,iBACtC,G,uBAGD,SAAUE,GACN,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAO5D,OAArB,EAChB4D,EAAOI,QAAU,SAACX,GAAD,OAAWM,EAAON,EAAlB,CACpB,GACJ,K,MAMDxD,EADG,EACHA,QACAC,EAFG,EAEHA,SACAH,EAHG,EAGHA,QACAC,EAJG,EAIHA,WACAjB,EALG,EAKHA,UACAsC,EANG,EAMHA,Y","file":"static/js/15.f12070b6.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\nimport {GetProfileDetails, ProfileUpdateRequest} from \"../../APIRequest/APIRequest\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ErrorToast, getBase64, IsEmail, IsEmpty, IsMobile} from \"../../helper/FormHelper\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n    let emailRef,firstNameRef,lastNameRef,mobileRef,passwordRef,userImgRef,userImgView=useRef();\r\n\r\n    useEffect(()=>{\r\n        GetProfileDetails()\r\n    },[])\r\n\r\n\r\n    const ProfileData = useSelector((state) => state.profile.value);\r\n\r\n\r\n    let navigate=useNavigate();\r\n    \r\n    \r\n    const PreviewImage = () => {\r\n        let ImgFile = userImgRef.files[0];\r\n        getBase64(ImgFile).then((base64Img)=>{\r\n            userImgView.src=base64Img;\r\n        })\r\n    }\r\n\r\n    \r\n    \r\n    const UpdateMyProfile = () => {\r\n        let email=emailRef.value;\r\n        let fastName=firstNameRef.value;\r\n        let lastName=lastNameRef.value;\r\n        let mobile=mobileRef.value;\r\n        let password= passwordRef.value;\r\n        let photo=userImgView.src\r\n\r\n        if(IsEmail(email)){\r\n            ErrorToast(\"Valid Email Address Required !\")\r\n        }\r\n        else if(IsEmpty(fastName)){\r\n            ErrorToast(\"First Name Required !\")\r\n        }\r\n        else if(IsEmpty(lastName)){\r\n            ErrorToast(\"Last Name Required !\")\r\n        }\r\n        else if(!IsMobile(mobile)){\r\n            ErrorToast(\"Valid Mobile  Required !\")\r\n        }\r\n        else if(IsEmpty(password)){\r\n            ErrorToast(\"Password Required !\")\r\n        }\r\n        else{\r\n            ProfileUpdateRequest(email,fastName,lastName,mobile,password,photo).then((result)=>{\r\n                if(result===true){\r\n                    navigate(\"/\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row d-flex justify-content-center\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"container-fluid\">\r\n                                <img  ref={(input)=>userImgView=input} className=\"icon-nav-img-lg\" src={ProfileData['photo']} alt=\"\"/>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>Profile Picture</label>\r\n                                        <input onChange={PreviewImage}  ref={(input)=>userImgRef=input} placeholder=\"User Email\" className=\"form-control animated fadeInUp\" type=\"file\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>Email Address</label>\r\n                                        <input key={Date.now()} defaultValue={ProfileData['email']}  readOnly={true}  ref={(input)=>emailRef=input} placeholder=\"User Email\" className=\"form-control animated fadeInUp\" type=\"email\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>First Name</label>\r\n                                        <input  key={Date.now()} defaultValue={ProfileData['firstName']} ref={(input)=>firstNameRef=input} placeholder=\"First Name\" className=\"form-control animated fadeInUp\" type=\"text\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>Last Name</label>\r\n                                        <input key={Date.now()} defaultValue={ProfileData['lastName']}  ref={(input)=>lastNameRef=input} placeholder=\"Last Name\" className=\"form-control animated fadeInUp\" type=\"text\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>Mobile</label>\r\n                                        <input key={Date.now()} defaultValue={ProfileData['mobile']} ref={(input)=>mobileRef=input} placeholder=\"Mobile\" className=\"form-control animated fadeInUp\" type=\"mobile\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <label>Password</label>\r\n                                        <input key={Date.now()} defaultValue={ProfileData['password']}  ref={(input)=>passwordRef=input} placeholder=\"User Password\" className=\"form-control animated fadeInUp\" type=\"password\"/>\r\n                                    </div>\r\n                                    <div className=\"col-4 p-2\">\r\n                                        <button onClick={UpdateMyProfile}  className=\"btn w-100 float-end btn-primary animated fadeInUp\">Update</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import axios from \"axios\";\r\nimport {ErrorToast, SuccessToast} from \"../helper/FormHelper\";\r\nimport store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport {getToken, setEmail, setOTP, setToken, setUserDetails} from \"../helper/SessionHelper\";\r\nimport {SetCanceledTask, SetCompletedTask, SetNewTask, SetProgressTask} from \"../redux/state-slice/task-slice\";\r\nimport {SetSummary} from \"../redux/state-slice/summary-slice\";\r\nimport {SetProfile} from \"../redux/state-slice/profile-slice\";\r\nconst BaseURL=\"https://mern-task-manager-rabbil.herokuapp.com/api/v1\"\r\n\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\nexport function NewTaskRequest(title,description){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/createTask\";\r\n    let PostBody={\"title\":title,\"description\":description,status:\"New\"}\r\n\r\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"New Task Created\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    })\r\n\r\n\r\n}\r\nexport function LoginRequest(email,password){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/login\";\r\n    let PostBody={\"email\":email,\"password\":password}\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            setToken(res.data['token']);\r\n            setUserDetails(res.data['data']);\r\n            SuccessToast(\"Login Success\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Invalid Email or Password\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function RegistrationRequest(email,firstName,lastName,mobile,password,photo){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/registration\";\r\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password, photo:photo}\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                if(res.data['data']['keyPattern']['email']===1){\r\n                    ErrorToast(\"Email Already Exist\")\r\n                    return false;\r\n                }\r\n                else{\r\n                    ErrorToast(\"Something Went Wrong\")\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                SuccessToast(\"Registration Success\")\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"Something Went Wrong\")\r\n        return false;\r\n    })\r\n}\r\nexport function TaskListByStatus(Status){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/listTaskByStatus/\"+Status;\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(Status===\"New\"){\r\n                store.dispatch(SetNewTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Completed\"){\r\n                store.dispatch(SetCompletedTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Canceled\"){\r\n                store.dispatch(SetCanceledTask(res.data['data']))\r\n            }\r\n            else if(Status===\"Progress\"){\r\n                debugger;\r\n                store.dispatch(SetProgressTask(res.data['data']))\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function SummaryRequest(){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/taskStatusCount\";\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetSummary(res.data['data']))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function DeleteRequest(id){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/deleteTask/\"+id;\r\n    return axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Delete Successful\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function UpdateStatusRequest(id,status){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/updateTaskStatus/\"+id+\"/\"+status;\r\n    return axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            SuccessToast(\"Status Updated\")\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\nexport function GetProfileDetails(){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/profileDetails\";\r\n    axios.get(URL,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetProfile(res.data['data'][0]))\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n    });\r\n}\r\nexport function ProfileUpdateRequest(email,firstName,lastName,mobile,password,photo){\r\n\r\n    store.dispatch(ShowLoader())\r\n\r\n    let URL=BaseURL+\"/profileUpdate\";\r\n\r\n    let PostBody={email:email,firstName:firstName,lastName:lastName,mobile:mobile,password:password,photo:photo}\r\n    let UserDetails={email:email,firstName:firstName,lastName:lastName,mobile:mobile,photo:photo}\r\n\r\n    return axios.post(URL,PostBody,AxiosHeader).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            SuccessToast(\"Profile Update Success\")\r\n            setUserDetails(UserDetails)\r\n\r\n            return true;\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return  false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n// Recover Password Step 01 Send OTP\r\nexport function RecoverVerifyEmailRequest(email){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverVerifyEmail/\"+email;\r\n    return axios.get(URL).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(\"No user found\");\r\n                return false;\r\n            }\r\n            else{\r\n                setEmail(email)\r\n                SuccessToast(\"A 6 Digit verification code has been sent to your email address. \");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\");\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n// Recover Password Step 02 Verify OTP\r\nexport function RecoverVerifyOTPRequest(email,OTP){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverVerifyOTP/\"+email+\"/\"+OTP;\r\n    return axios.get(URL).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"Code Verification Success\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n\r\n// Recover Password Step 03 Reset Pass\r\nexport function RecoverResetPassRequest(email,OTP,password){\r\n    store.dispatch(ShowLoader())\r\n    let URL=BaseURL+\"/RecoverResetPass\";\r\n    let PostBody={email:email,OTP:OTP,password:password}\r\n\r\n    return axios.post(URL,PostBody).then((res)=>{\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n\r\n            if(res.data['status']===\"fail\"){\r\n                ErrorToast(res.data['data']);\r\n                return false;\r\n            }\r\n            else{\r\n                setOTP(OTP)\r\n                SuccessToast(\"NEW PASSWORD CREATED\");\r\n                return true;\r\n            }\r\n        }\r\n        else{\r\n            ErrorToast(\"Something Went Wrong\")\r\n            return false;\r\n        }\r\n    }).catch((err)=>{\r\n        ErrorToast(\"Something Went Wrong\")\r\n        store.dispatch(HideLoader())\r\n        return false;\r\n    });\r\n}\r\n","import cogoToast from \"cogo-toast\";\r\nlet EmailRegx = /\\S+@\\S+\\.\\S+/;\r\nlet MobileRegx = /(^(\\+88|0088)?(01){1}[3456789]{1}(\\d){8})$/;\r\n\r\nclass FormHelper {\r\n\r\n    IsEmpty(value) {\r\n        return value.length === 0;\r\n    }\r\n\r\n    IsMobile(value){\r\n        return MobileRegx.test(value);\r\n    }\r\n\r\n    IsEmail(value) {\r\n        return !EmailRegx.test(value);\r\n    }\r\n\r\n    ErrorToast(msg) {\r\n        cogoToast.error(msg, { position: \"bottom-center\" });\r\n    }\r\n    SuccessToast(msg) {\r\n        cogoToast.success(msg, { position: \"bottom-center\" });\r\n    }\r\n\r\n\r\n    getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const {\r\n    IsEmpty,\r\n    IsMobile,\r\n    IsEmail,\r\n    ErrorToast,\r\n    getBase64,\r\n    SuccessToast\r\n} = new FormHelper();"],"sourceRoot":""}